I learned that a tool such as 'diff' can easily detect changes between 2 files.
This can be used to quickly find typos in later revisions. This saves the
programmer time!

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It enables the programmer to see the project's evolution. It reveals the
design problems that came into play. Thus, allowing the programmer to 
take greater care from the start of another project.

* one commit per logical change

What do you think are the pros and cons of manually choosing when to create a 
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Manual commits allows revision history to be more manageable because each
commit should (if done properly) reflect one logical change. The downside
is the potential for human error - forgetting to commit. Automatic saving
counters this, but creates many more revisions which makes it less
manageable.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git is designed for code. Source files may depend on other files to function 
properly so it makes sense to save all such files in one commit. Google 
Docs isn't designed strictly with code in mind. 

How can you use the commands git log and git diff to view the history of files?

git log can be used to show entire history. git diff can be used to compare
two revisions, checking for differences.

How might using version control make you more confident to make changes that 
could break something?

Version control saves previous working versions so the possibility to go back
is always present. Additionally, git diff can make it easier to see how
a bug was introduced in a later revision.

Now that you have your workspace set up, what do you want to try using Git for?

I want to use Git to become a better programmer. I want to be able to quickly
find bugs, and have a development history of each of my projects.

* git can make finding and correcting bugs fast and easy 
** WITHOUT KNOWING THE CODE BASE
